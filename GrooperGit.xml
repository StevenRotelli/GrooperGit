<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GrooperGit</name>
    </assembly>
    <members>
        <member name="T:GrooperGit.FileManager">
            <summary>
            A Class to maintain a file abstract of the Grooper Tree Under the git project in order to leverage GIT commands against the Grooper Nodes.
            </summary>
            <remarks>
            This is because Grooper Nodes aren't files and need to be able to detect differences as files and compare differences as files.
            </remarks>
        </member>
        <member name="M:GrooperGit.FileManager.SyncProject(Grooper.GrooperNode)">
            <summary>
            Syncs the active node settings of all children in the project and marks their appropriate GitStatus.
            </summary>
            <param name="grooperNode">The GrooperNode to be synced.</param>
        </member>
        <member name="T:GrooperGit.GitRepository">
            <summary>
            Git Repository
            </summary>
        </member>
        <member name="M:GrooperGit.GitRepository.#ctor(Grooper.ConnectedObject)">
            <inheritdoc/>
        </member>
        <member name="P:GrooperGit.GitRepository.localPath">
            <summary>Represents the location of the local Git repository</summary>
            <remarks>The path is also where the required Git CLI runs</remarks>
        </member>
        <member name="P:GrooperGit.GitRepository.localRepository">
            <summary>Represents the local path of the Git repository associated with the Grooper Project.</summary>
            <remarks>The repository URL points to the location where the Git project is hosted. Developers can use this URL to clone, fetch, or push changes to the repository. It's an essential link for collaboration and code management.</remarks>
        </member>
        <member name="P:GrooperGit.GitRepository.localBranch">
            <summary>Manages Git branches within the specified GitProject.</summary>
            <remarks>Git branches allow developers to work on features or fixes in isolation, without affecting the main or other development lines. This ensures code stability and streamlined collaboration. More details can be found <a href="https://git-scm.com/docs/git-branch">here</a>.</remarks>
        </member>
        <member name="P:GrooperGit.GitRepository.remoteRepository">
            <summary>Represents the remote path of the Git repository associated with the Grooper Project.</summary>
            <remarks>The repository URL points to the location where the Git project is hosted. Developers can use this URL to clone, fetch, or push changes to the repository. It's an essential link for collaboration and code management.</remarks>
        </member>
        <member name="M:GrooperGit.GitRepository.ValidateProperties">
            <inheritdoc/>
        </member>
        <member name="T:GrooperGit.Shell">
            <summary>
            An abstract for running git CLI commmands through powershell. 
            </summary>
        </member>
        <member name="M:GrooperGit.Shell.#ctor(System.String)">
            <summary>
            Contsctructor
            </summary>
            <param name="cwd">The current working directory of the shell</param>
        </member>
        <member name="T:GrooperGit.GitProject">
            <summary>
            A Git Project is a library of resources that can be version controlled and managed by other people.
            It serves as the primary container in which design components are created and organized.
            </summary>
            <remarks>
            Project 'resources' are configuration objects created by a designer, 
            which define the connections, data structures, and logic used when processing documents through Grooper.
            </remarks>
        </member>
        <member name="T:GrooperGit.ConverToGitProject">
            <summary>
            Executes a publish to git, and creates a git repository on a Project [Object Command].
            </summary>
            <remarks>
            Transforms the node type from Project to GitProject, and begins a repository connection.
            <a href="https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository">More info</a>.
            </remarks>
        </member>
        <member name="M:GrooperGit.ConverToGitProject.Execute(Grooper.Project)">
            <summary>
            Code that will be executed when the [Object Command] is executed.
            </summary>
            <param name="item">The Grooper object that the command will execute against.</param>
        </member>
        <member name="T:GrooperGit.GitCommand">
            <summary>Template for a custom for ObjectCommands under GitProject.</summary>
            <remarks>This abstract is here to minimize code rewrites for allowed exection.</remarks>
        </member>
        <member name="T:GrooperGit.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.BlueCheck">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Branch">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Commit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Diff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Fetch">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Fetch_old">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Git">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.GitProject">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Green_Check">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.markdown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Merge">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Pull">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Pull_old">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Push">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Search">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Stage">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrooperGit.Properties.Resources.Unstage">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:GrooperGit.BranchListConverter">
            <summary>
            Creates a dropdown list of branches from the connected Git Project.
            </summary>
        </member>
        <member name="M:GrooperGit.BranchListConverter.GetListItems(GrooperGit.GitProject,System.ComponentModel.PropertyDescriptor)">
            <inheritdoc/>
        </member>
        <member name="T:GrooperGit.Stage">
            <summary>Executes a Git Stage operation, preparing changes for commit in the specified GitProject [Object Command].</summary>
            <remarks>Git Staging allows you to prepare changes for a commit, helping you organize modifications and facilitating code review. Learn more about Git Staging <a href="https://git-scm.com/docs/git-stage">here</a>.</remarks>
        </member>
    </members>
</doc>
